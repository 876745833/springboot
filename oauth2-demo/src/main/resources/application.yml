security:
  oauth2:
    client:
      client-id: demoApp
      client-secret: demoAppSecret
      scope: read,write
      auto-approve-scopes: '.*'
      grant-type: client_credentials
    authorization:
      check-token-access: permitAll()
      token-key-access: permitAll()
      realm: all
    resource:
      token-info-uri: /oauth/token
#github:
#  client:
#    clientId: bd1c0a783ccdd1c9b9e4
#    clientSecret: 1a9030fbca47a5b2c28e92f19050bb77824b5ad1
#    accessTokenUri: https://github.com/login/oauth/access_token
#    userAuthorizationUri: https://github.com/login/oauth/authorize
#    clientAuthenticationScheme: form
#  resource:
#    userInfoUri: https://api.github.com/user
#
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework: DEBUG
server:
  port: 8081
spring:
  jpa:
    database: mysql
    show-sql: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/oauth2?allowMultiQueries=true
    username: root
    password: admin
         # 下面为连接池的补充设置，应用到上面所有数据源中
         # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 2000
        # 配置获取连接等待超时的时间
    maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    spring.datasource.filters: stat,wall,log4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true
  redis:
    host: 192.168.220.129
    port: 6379
    password: 123456
    lettuce:
      pool:
           # 连接池最大连接数（使用负值表示没有限制）
        max-active: 900
            # 连接池中的最大空闲连接
        max-idle: 800
            # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 3600s
            # 连接池中的最小空闲连接
        min-idle: 50
